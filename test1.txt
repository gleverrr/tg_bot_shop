async def process_delete_order(message: Message, state: FSMContext, bot: Bot):
    session = None
    try:
        # Получаем ID заказа из текста сообщения
        order_id = int(message.text.split("#")[1])
        session = get_db_session()
        order = session.query(Order).filter(Order.id == order_id, Order.user_id == message.from_user.id).first()

        if order:
            # Удаляем все сообщения из канала, если они были опубликованы
            if order.channel_message_ids:
                message_ids = order.channel_message_ids.split(",")
                for msg_id in message_ids:
                    try:
                        await bot.delete_message(chat_id=Config.CHANNEL_ID, message_id=int(msg_id))
                    except Exception as e:
                        logger.error(f"Ошибка при удалении сообщения из канала: {e}")

            # Удаляем сообщения из чата с администратором, если они были отправлены
            if order.admin_message_ids:
                admin_message_ids = order.admin_message_ids.split(",")
                for msg_id in admin_message_ids:
                    try:
                        await bot.delete_message(chat_id=Config.ADMIN_IDS[0], message_id=int(msg_id))
                    except Exception as e:
                        logger.error(f"Ошибка при удалении сообщения из чата с администратором: {e}")

            # Удаляем сообщение с кнопками, если оно было отправлено
            if order.admin_buttons_message_id:
                try:
                    await bot.delete_message(chat_id=Config.ADMIN_IDS[0], message_id=order.admin_buttons_message_id)
                except Exception as e:
                    logger.error(f"Ошибка при удалении сообщения с кнопками: {e}")

            # Помечаем объявление как неактивное
            order.is_active = False
            session.commit()

            await message.answer("Объявление удалено.", reply_markup=get_main_keyboard())
        else:
            await message.answer("Объявление не найдено.", reply_markup=get_main_keyboard())
    except Exception as e:
        logger.error(f"Ошибка при удалении объявления: {e}")
        await message.answer("Произошла ошибка при удалении объявления.", reply_markup=get_main_keyboard())
    finally:
        if session:
            session.close()  # Закрываем сессию в любом случае
        await state.clear()